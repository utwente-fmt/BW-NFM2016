% This example illustrates the use of induction on list variables.
%
%
% The following commands are used to check whether or not the formula in rev.form is a
% tautology or a contradiction using induction on list variables.
%
% mcrl22lps rev.mcrl2 rev.lps
% formulacheck rev.lps -f rev.form -o
%
%
% The variable y occurs before variable x in the formula in rev2.form. Induction is
% applied on variable y first when checking formula rev2.form. The formula
% can not be proven to be a tautology using induction on variable y only. The tool
% will therefore apply induction on both variables after the first attempt fails.
%
% The output generated by the following command can be used to verify this statement.
%
% formulacheck rev.lps -f rev2.form -o -v

sort
  Data;

cons
  element: Data;

map
  reverse: List(Data) -> List(Data);

var
  d: Data;
  s: List(Data);
  x, y, z: List(Data);

eqn
  reverse([]) = [];
  reverse(d |> s) = reverse(s) ++ [d];
  x ++ (y ++ z) = (x ++ y) ++ z;

proc
  P(x, y: List(Data), d: Data) =
    (reverse(y) ++ reverse(x) == reverse(x ++ y)) -> tau . P(y, x, d);

init
  P([], [], element);
