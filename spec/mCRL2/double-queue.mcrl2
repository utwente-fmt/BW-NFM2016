% This specification serves as an example of the use of lpsinvelm. It
% specifies a component called Q that has two process parameters, q1
% and q2 of sort List(D). q1 == q2 holds as an invariant for this
% specification.
%
% The following commands simplify this lps using the given invariant:
% mcrl22lps -n double-queue.mcrl2 double-queue.lps
% lpsinvelm -i double-queue.inv double-queue.lps double-queue-elm.lps


sort
  D = struct D1 | D2;

var
  q1: List(D);
  q2: List(D);

act
  r, s, r', s', c: D;

proc
  Q(q1: List(D), q2: List(D)) = sum d: D. r(d) . Q(d |>  q1, d |> q2) +
                            ((q1 != []) && (q2 != [])) -> s(head(q1)) . Q(tail(q1), tail(q2)) +
                            (q1 != q2) -> s(D1) . delta;

  Q1 = rename({s -> s'}, Q([], []));

  Q2 = rename({r -> r'}, Q([], []));

  Q = hide({c}, allow({s, r, c}, comm({s' | r' -> c}, Q1 || Q2)));

init
  Q;
